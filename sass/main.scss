/* parent's width is the base of % based calculations (excluding fonts) */
/* em (font): parent's computed font size, em (length): current element's font size. rem: size based on the root element's font size*/

/* BEM: .block__element--modifier */
/* 7-1 css folder architecture */


$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;
$color-grey: #777;
$color-white: #fff;
$color-black:rgba(0, 0, 0, .2); 

/* Basic reset */
*,
*::after,
*::before {
   margin: 0;
   padding: 0;  
   box-sizing: inherit;
}

/* overwriting the root font size to default it to 10px (10/16) while still allowing user to change it from accessibility settings */
html {
   font-size: 62.5%;
}

body {
   font-family: "Lato", sans-serif;
   font-weight: 400;
   /* line height 1.7 = line will be 1.7 times bigger than the p#fffefined line */
   line-height: 1.7;
   color: $color-grey; 
   padding: 3rem;

   box-sizing: border-box;
}

.header {
   height: 95vh;
   background-image: 
      linear-gradient(to right bottom, rgba($color-primary-light, 0.8), rgba($color-primary-dark, 0.8)), url(../img/hero.jpg);
   background-size: cover;
   /* ensures that the top of the image stays at the top of its container */
   background-position: top; 
   position: relative;
   clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

   // .header__logo-box
   &__logo-box {
      position: absolute;
      top: 4rem;
      left: 4rem;
   }

   &__logo{
      height: 3.5rem;
   }
                                     
   &__text-box {
      position: absolute;
      top: 40%;
      left: 50%;
      transform: translate(-50%, -50%);
      /* text-align: center    because display: blocks are treated as text */
      text-align: center;
   }
}

.heading-primary {
   color: $color-white;
   text-transform: uppercase; 
   margin-bottom: 7rem;
        
   /* fixes occasional animation glitches on some browsers */
   backface-visibility: hidden;

   &--main {
      /* display: block = element takes up 100% width of the parent */
      display: block;
      font-size: 3rem;
      font-weight: 400;
      letter-spacing: 1.7rem;

      /* the same as    animation: moveInLeft 3s ease-out */
      animation-name: moveInLeft;
      animation-duration: 3s;
      animation-timing-function: ease-out;
      
      /* animation-iteration-count: 3; */
      /* animation-delay: 2s; */
   }

   &--sub {
      display: block;
      font-size: 2rem;
      font-weight: 700;
      letter-spacing: 1.5rem;

      /* the same as    animation: moveInRight 3s ease-out*/
      animation-name: moveInRight;
      animation-duration: 3s;
      animation-timing-function: ease-out;
   }

}
.btn {

   &--white {
      background-color: $color-white;
      color: $color-grey;

     &::after {
         background-color: $color-white;      
      }
   }

   &:link,
   &:visited {
      text-decoration: none;
      text-transform: uppercase;
      padding: 1.5rem 4rem;
      display: inline-block;
      border-radius: 10rem;
      transition: all .2s;
      /* position relative so it's the element btn::after references */
      position: relative;
   }

   &:hover {
      transform: translateY(-.3rem);
      /* box-shadow. 1) X offset 2) Y offset 3) blur radius */
      box-shadow: 0 1rem 2rem $color-black;


      &::after {
         transform: scaleX(1.4) scaleY(1.8);
         opacity: 0;
      }
   }

   &:active {
      transform: translateY(-1px);
      box-shadow: 0 .5rem 1rem $color-black; 
   }

   &::after {
      content: "";
      display: inline-block;
      /* width and height 100% so it's the same size as the Btn parent element */
      width: 100%;
      height: 100%;
      border-radius: 10rem;
      position: absolute; 
      top: 0;
      left: 0;
      z-index: -1;
      transition: all 0.4s;
   }

   &--animated {
      /* 4th argument: animation delay */
      animation: moveInBottom 0.7s ease-out 0.7s;
      /* animation-fill-mode: backwards   auto applies styles from the 0% keyframe at the start */
      animation-fill-mode: backwards;
   }

}
// !------------------------------- 
@keyframes moveInLeft {
   0% {
      opacity: 0;
      transform: translateX(-100px);
   }

  80% {
      transform: translateX(1rem);
   }

   100% {
      opacity: 1;
      transform: translate(0);
   }
}

@keyframes moveInRight {
   0% {
      opacity: 0;
      transform: translateX(10rem);
   }

   80% {
      transform: translateX(-1rem);
   }

   100% {
      opacity: 1;
      transform: translate(0);
   }
}
@keyframes moveInBottom {
   0% {
      opacity: 0;
      transform: translateY(7rem);
   }

   100% {
      opacity: 1;
      transform: translate(0);
   }
}

