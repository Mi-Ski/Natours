.row {
	max-width: $grid-width;
	background-color: #eee;
	// margin top/bottom: 0, margin left/right: auto
	margin: 0 auto;

	// apply on all the rows except the last child
	// same as .row:now(:last-child){}
	&:not(:last-child) {
		margin-bottom: $gutter-vertical;
	}
	// height collapses and becomes 0 because of the float, fixing this with a clearfix mixin
	@include clearfix;

	.col-1-of-2 {
		// calc funcion supporting unit mixing
		width: calc((100% - #{$gutter-horizontal}) / 2);
		background-color: orange;
	}

	.col-1-of-3 {
		width: calc((100% - #{$gutter-horizontal * 2}) / 3);
		background-color: powderblue;
	}

	.col-1-of-4 {
    width: calc((100% - #{$gutter-horizontal} * 3) / 4);
    background-color: lightcoral;
	}

	.col-2-of-3 {
    width: calc((2 * (100% - #{$gutter-horizontal} * 2) / 3) + #{$gutter-horizontal});
    background-color: palegreen;
  }

	.col-2-of-4 {
    width: calc((2 * (100% - #{$gutter-horizontal} * 3) / 4) + #{$gutter-horizontal});
    background-color: orchid;
  }

	.col-3-of-4 {
    width: calc((3 * (100% - #{$gutter-horizontal} * 3) / 4) + 2 * #{$gutter-horizontal});
    background-color: lightsteelblue;
	}
	// attribute selector, eg. [alt="Logo"] {}
	// [class*="col-"] <- classes containing "col-"
	// [class$="col-"] <- classes enging with "col-"
	// targets class names beggining with "col-":
	[class^='col-'] {
		float: left;

		&:not(:last-child) {
			margin-right: $gutter-horizontal;
		}
	}
}
